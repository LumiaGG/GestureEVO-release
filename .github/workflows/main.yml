name: Update APK and Create Release

on:
  push:
    paths:
      - '*.APK'  # 监控根目录下的APK文件
  workflow_dispatch:  # 允许手动触发

jobs:
  create-release-and-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 需要创建发布
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整历史记录以查找文件更改
      
      - name: Find latest APK file
        id: find-apk
        run: |
          # 查找最新的APK文件
          LATEST_APK=$(find . -maxdepth 1 -name "*.APK" -type f -o -name "*.apk" -type f | sort -r | head -n 1)
          
          # 如果没有找到APK，使用默认路径
          if [ -z "$LATEST_APK" ]; then
            LATEST_APK="GestureEVO-release.APK"
          fi
          
          echo "Found APK file: $LATEST_APK"
          echo "apk_path=$LATEST_APK" >> $GITHUB_OUTPUT
          
          # 从文件名提取版本号
          if [[ "$LATEST_APK" =~ GestureEVO-([0-9]+\.[0-9]+-[0-9]+)\.APK ]]; then
            VERSION="${BASH_REMATCH[1]}"
          elif [[ "$LATEST_APK" =~ -([0-9]+\.[0-9]+[.-][0-9]+)\.APK ]]; then
            VERSION="${BASH_REMATCH[1]}"
          else
            MODIFIED_DATE=$(git log -1 --format=%cd --date=format:"%Y.%m.%d" -- "$LATEST_APK")
            VERSION="$MODIFIED_DATE"
          fi
          
          echo "Extracted version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "apk_filename=$(basename "$LATEST_APK")" >> $GITHUB_OUTPUT
      
      - name: Create GitHub Release
        id: create-release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.find-apk.outputs.apk_path }}
          tag_name: v${{ steps.find-apk.outputs.version }}
          name: GestureEVO v${{ steps.find-apk.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Get Release Info
        id: get-release-info
        run: |
          # 获取发布说明
          RELEASE_NOTES=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/v${{ steps.find-apk.outputs.version }}" | \
            jq -r '.body')
          
          # 转义JSON特殊字符
          RELEASE_NOTES_JSON=$(echo "$RELEASE_NOTES" | jq -Rs .)
          
          echo "release_url=https://github.com/$GITHUB_REPOSITORY/releases/tag/v${{ steps.find-apk.outputs.version }}" >> $GITHUB_OUTPUT
          echo "release_notes=$RELEASE_NOTES_JSON" >> $GITHUB_OUTPUT
      
      - name: Update version.json
        run: |
          CURRENT_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          
          cat > version.json << EOF
          {
            "version": "${{ steps.find-apk.outputs.version }}",
            "releaseUrl": "https://github.com/$GITHUB_REPOSITORY/releases/tag/v${{ steps.find-apk.outputs.version }}",
            "downloadUrl": "https://github.com/$GITHUB_REPOSITORY/releases/download/v${{ steps.find-apk.outputs.version }}/${{ steps.find-apk.outputs.apk_filename }}",
            "lastUpdated": "$CURRENT_DATE",
            "fileName": "${{ steps.find-apk.outputs.apk_filename }}",
            "releaseNotes": ${{ steps.get-release-info.outputs.release_notes }}
          }
          EOF
          echo "Updated version.json"
      
      - name: Remove APK file
        run: |
          echo "Removing APK file from repository..."
          rm -f "${{ steps.find-apk.outputs.apk_path }}"
          echo "APK file removed."
            
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add index.html version.json
          git add --all
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update release info for v${{ steps.find-apk.outputs.version }}"
            git pull origin main --rebase
            git push origin main
          fi