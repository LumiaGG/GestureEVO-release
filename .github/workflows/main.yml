name: Update APK Download Link

on:
  push:
    paths:
      - 'downloads/**/*.APK'  # 当downloads目录中的APK文件有更新时触发
  workflow_dispatch:  # 允许手动触发

jobs:
  update-index-html:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整历史以便查找文件变更

      - name: Find latest APK file
        id: find-apk
        run: |
          # 查找最新推送的APK文件
          LATEST_APK=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.APK$' | head -n 1)
          
          # 如果没有在当前推送中找到APK文件，则查找整个仓库中的APK文件
          if [ -z "$LATEST_APK" ]; then
            LATEST_APK=$(find downloads -name "*.APK" -type f | sort -r | head -n 1)
          fi
          
          # 如果仍然没有找到APK文件，使用默认路径
          if [ -z "$LATEST_APK" ]; then
            LATEST_APK="downloads/app-release.APK"
          fi
          
          echo "Found APK file: $LATEST_APK"
          echo "apk_path=$LATEST_APK" >> $GITHUB_OUTPUT

      - name: Update index.html
        run: |
          APK_PATH="${{ steps.find-apk.outputs.apk_path }}"
          APK_FILE=$(basename "$APK_PATH")
          
          # 更新index.html中的APK路径
          sed -i "s|const apkPath = './downloads/.*'|const apkPath = './$APK_PATH'|g" index.html
          
          echo "Updated index.html to point to $APK_PATH"

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add index.html
          
          # 只有当有实际更改时才提交
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update APK download link to latest version"
            git pull origin main --rebase
            git push origin main
          fi
